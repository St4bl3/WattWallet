// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Transaction {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  transactionId String     @unique
  senderId      String
  receiverId    String
  productId     String?    @db.ObjectId
  type          TransactionType
  amount        Float

  // Define relations
  product       Product?   @relation(fields: [productId], references: [id])
}

model Balance {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  userId        String       @unique
  creditBalance Float        @default(0.0)
  energyBalance Float        @default(0.0)
  isBank        Boolean      @default(false) // If true, identifies as bank

  // Define relations
  transactions   Transaction[] @relation("SenderTransactions", fields: [userId], references: [senderId])
  receivedTransactions Transaction[] @relation("ReceiverTransactions", fields: [userId], references: [receiverId])
}

model Product {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  inStock     Int
  category    String
  brand       String
  ratings     Float
  reviews     Int
  imageUrl    String

  // Define inverse relation
  transactions Transaction[]
}

enum TransactionType {
  Purchase
  BuyCredits
  BuyTokens
  SellTokens
}
