// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Transaction {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  transactionId String     @unique
  senderId      String
  receiverId    String
  applianceId   String?    @db.ObjectId
  productId     String?    @db.ObjectId

  // Define relations
  product       Product?   @relation(fields: [productId], references: [id])
  appliance     Appliance? @relation(fields: [applianceId], references: [id])
}

model Balance {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  userId        String       @unique
  creditBalance Float        @default(0.0)
  energyBalance Float        @default(0.0)
  appliances    Appliance[]
  isBank        Boolean      @default(false) // If true, identifies as bank
}

model Appliance {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  userId        String
  name          String
  isOn          Boolean  @default(false)
  energyBalance Float    @default(0.0)
  balanceId     String   @db.ObjectId
  Balance       Balance  @relation(fields: [balanceId], references: [id])

  // Define inverse relation
  transactions Transaction[]
}

model Product {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  inStock     Int
  category    String
  brand       String
  ratings     Float
  reviews     Int
  imageUrl    String

  // Define inverse relation
  transactions Transaction[]
}
